version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: woodland_postgres
    environment:
      POSTGRES_DB: woodland_car_rental
      POSTGRES_USER: woodland_user
      POSTGRES_PASSWORD: woodland_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - woodland_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U woodland_user -d woodland_car_rental"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: woodland_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - woodland_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: woodland_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://woodland_user:woodland_password@postgres:5432/woodland_car_rental
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key
      JWT_REFRESH_SECRET: development-refresh-secret-key
    ports:
      - "3001:3001"
    volumes:
      - ../backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - woodland_network
    restart: unless-stopped

  # Customer Portal Website
  customer-portal:
    build:
      context: ../customer-portal
      dockerfile: Dockerfile
    container_name: woodland_customer_portal
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_development_key
      NEXT_PUBLIC_RAZORPAY_KEY_ID: rzp_test_development_key
    ports:
      - "3000:3000"
    volumes:
      - ../customer-portal:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - woodland_network
    restart: unless-stopped

  # Admin CRM Portal
  admin-portal:
    build:
      context: ../admin-portal
      dockerfile: Dockerfile
    container_name: woodland_admin_portal
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_STRIPE_PUBLISHABLE_KEY: pk_test_development_key
      VITE_RAZORPAY_KEY_ID: rzp_test_development_key
    ports:
      - "3002:3002"
    volumes:
      - ../admin-portal:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - woodland_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: woodland_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - customer-portal
      - admin-portal
      - backend
    networks:
      - woodland_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  woodland_network:
    driver: bridge
